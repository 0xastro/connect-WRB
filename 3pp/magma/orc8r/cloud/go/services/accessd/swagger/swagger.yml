---
swagger: '2.0'
info:
  title: Access/Operator definitions and paths
  description: Magma REST APIs
  version: 1.0.0

paths:
  /operators:
    get:
      # GET will fetch a globally scopped list of all registered operators
      # that the caller has the right to see.
      summary: Retrieve List of Registered Operators
      tags:
      - Operators
      responses:
        '200':
          description: List of Operators
          schema:
            type: array
            items: # the additional Identity types may be added using 'oneOf'
              $ref: '#/definitions/operator_id'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
    post:
      summary: Add a new Operator
      tags:
      - Operators
      parameters:
      - in: body
        name: create_operator_record
        description: Operator's Id and Data to add
        required: true
        schema:
          $ref: '#/definitions/create_operator_record'
      responses:
        '201':
          description: New signed cert
          schema:
            $ref: '#/definitions/certificate'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /operators/{operator_id}:
    get:
      summary: Retrieve Operator's Record
      tags:
      - Operators
      parameters:
      - $ref: '#/parameters/operator_id'
      responses:
        '200':
          description: Operator's Record (Certificate SNs and ACL)
          schema:
            $ref: '#/definitions/operator_record'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
    delete:
      summary: Delete Operator
      tags:
      - Operators
      parameters:
      - $ref: '#/parameters/operator_id'
      responses:
        '204':
          description: Success
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /operators/{operator_id}/entities:
    post:
      summary: Add a new Entity to Operator's ACL
      tags:
      - Operators
      parameters:
      - $ref: '#/parameters/operator_id'
      - in: body
        name: entity
        description: Entity to add to Operator's ACL
        required: true
        schema:
          $ref: '#/definitions/acl_entity'
      responses:
        '201':
          description: Success
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /operators/{operator_id}/entities/network/{network_id}:
    delete:
      summary: Delete Operator's Permissions for a Network Entity
      tags:
      - Operators
      parameters:
      - $ref: '#/parameters/operator_id'
      - $ref: './swagger-common.yml#/parameters/network_id'
      responses:
        '204':
          description: Success
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /operators/{operator_id}/entities/network/{network_id}/permissions:
    # NOTE: for a new Identity type, the URL will look like:
    #   '/operators/{operator_id}/entities/<new Identity Type>/{<the type's id>}':
    get:
      summary: Retrieve Operator's Permissions for Entity
      tags:
      - Operators
      parameters:
      - $ref: '#/parameters/operator_id'
      - $ref: './swagger-common.yml#/parameters/network_id'
      responses:
        '200':
          description: Operator's Permissions for Entity
          schema:
            $ref: '#/definitions/permissions_mask'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
    put:
      summary: Update Operator's Permissions for Entity
      tags:
      - Operators
      parameters:
      - $ref: '#/parameters/operator_id'
      - $ref: './swagger-common.yml#/parameters/network_id'
      - in: body
        name: permissions
        description: permissions of Entity to update
        required: true
        schema:
          $ref: '#/definitions/permissions_mask'
      responses:
        '200':
          description: Success
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

  /operators/{operator_id}/certificate:
    get:
      summary: Retrieve Current Operator's Certificate
      tags:
      - Operators
      parameters:
      - $ref: '#/parameters/operator_id'
      responses:
        '200':
          description: Base64 encoded Operator's Certificate
          schema:
            type: array
            items:
              $ref: '#/definitions/certificate_sn'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
    post:
      summary: Sign, set and return new Operator's Certificate
      tags:
      - Operators
      parameters:
      - $ref: '#/parameters/operator_id'
      - in: body
        name: csr
        description: Base64 encoded Operator's CSR request
        required: true
        schema:
          $ref: '#/definitions/csr_type'
      responses:
        '200':
          description: Base64 encoded & signed Operator Certificate
          schema:
            $ref: '#/definitions/certificate'
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'
    delete:
      summary: Delete Operator's Certificate (and disable operator's access)
      tags:
      - Operators
      parameters:
      - $ref: '#/parameters/operator_id'
      responses:
        '204':
          description: Success
        default:
          $ref: './swagger-common.yml#/responses/UnexpectedError'

parameters:
  operator_id:
    in: path
    name: operator_id
    type: string
    required: true

definitions:
  operator_id:
    type: string
    minLength: 1
    pattern: '^[a-zA-Z_][\da-zA-Z_]+$'
    example: MyNetworkAdmin
  permission_type:
    type: string
    enum:
      - NONE
      - READ
      - WRITE
    default: NONE
  permissions_mask:
    type: array
    maxLength: 2
    items:
      $ref: '#/definitions/permission_type'
  acl_entity:
    description: Access Controlled Entity
    type: object
    properties:
      operator_id:
        $ref: '#/definitions/operator_id'
      network_id:
        $ref: './swagger-common.yml#/definitions/network_id'
      permissions:
        $ref: '#/definitions/permissions_mask'
      entity_type:
        type: string
        enum:
          - OPERATOR
          - NETWORK
          - OPERATOR_WILDCARD
          - NETWORK_WILDCARD
  acl_type:
    description: Operator's Access Control List
    type: array
    items:
      type: object
      $ref: '#/definitions/acl_entity'
  csr_der:
    description: Base64 encoded operator's CSR request
    type: string
    format: byte
  duration_type:
    description: CSR duration, seconds + nanoseconds
    type: object
    properties:
      seconds:
        type: integer
        format: int64
      nanoseconds:
        type: integer
        format: int32
  csr_type:
    description: Operator's CSR request, with Base64 encoded DER and duration
    type: object
    properties:
      csr_der:
        type: object
        $ref: '#/definitions/csr_der'
      duration:
        $ref: '#/definitions/duration_type'
  certificate:
    description: Base64 encoded Operator's Certificate
    type: string
    format: byte
  certificate_sn:
    description: Serial number of certificate
    type: string
  operator_record:
    description: Operator Record
    type: object
    properties:
      certificate_sns:
        type: array
        items:
          $ref: '#/definitions/certificate_sn'
      entities:
        $ref: '#/definitions/acl_type'
  create_operator_record:
    description: Operator Create Request
    type: object
    required:
    - operator
    - csr
    properties:
    # 'operator' can be of any Identity type, currently we only support Operator
    # type & for simplicity sake 'hardcoded' operator name here.
    # eventually we'd need to move to oneOf model to support different types
      operator:
        $ref: '#/definitions/operator_id'
      csr:
        $ref: '#/definitions/csr_type'
      entities:
        $ref: '#/definitions/acl_type'