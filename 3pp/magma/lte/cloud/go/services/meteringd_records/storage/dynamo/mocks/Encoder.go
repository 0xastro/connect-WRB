/*
Copyright (c) Facebook, Inc. and its affiliates.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.
*/

// Code generated by mockery v1.0.0
package mocks

import (
	"magma/lte/cloud/go/protos"

	"github.com/aws/aws-sdk-go/service/dynamodb"
	"github.com/stretchr/testify/mock"
)

// Encoder is an autogenerated mock type for the Encoder type
type Encoder struct {
	mock.Mock
}

// getBatchedWriteRequestsForFlowTableUpdate provides a mock function with given fields: networkId, table, batchSize
func (_m *Encoder) GetBatchedWriteRequestsForFlowTableUpdate(networkId string, flows []*protos.FlowRecord, batchSize int) ([][]*dynamodb.WriteRequest, error) {
	ret := _m.Called(networkId, flows, batchSize)

	var r0 [][]*dynamodb.WriteRequest
	if rf, ok := ret.Get(0).(func(string, []*protos.FlowRecord, int) [][]*dynamodb.WriteRequest); ok {
		r0 = rf(networkId, flows, batchSize)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([][]*dynamodb.WriteRequest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, []*protos.FlowRecord, int) error); ok {
		r1 = rf(networkId, flows, batchSize)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// getBatchedDeleteRequestsForFlowTableUpdate provides a mock function with given fields: networkId, sid, batchSize
func (_m *Encoder) GetBatchedWriteRequestsForFlowDeletion(networkId string, flowIds []string, batchSize int) ([][]*dynamodb.WriteRequest, error) {
	ret := _m.Called(networkId, flowIds, batchSize)

	var r0 [][]*dynamodb.WriteRequest
	if rf, ok := ret.Get(0).(func(string, []string, int) [][]*dynamodb.WriteRequest); ok {
		r0 = rf(networkId, flowIds, batchSize)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([][]*dynamodb.WriteRequest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, []string, int) error); ok {
		r1 = rf(networkId, flowIds, batchSize)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
